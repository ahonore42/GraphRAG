name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Grant write permissions for packages
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/ahonore42/graphrag:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12.4
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.4"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH # Add uv to PATH

      - name: Install dependencies
        run: |
          uv venv
          uv pip sync pyproject.toml

      - name: Run tests
        run: |
          uv run pytest

  lint_and_format_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12.4
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.4"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH # Add uv to PATH

      - name: Install dependencies
        run: |
          uv venv
          uv pip sync pyproject.toml

      - name: Run ruff checks
        run: |
          uv run ruff check .
          uv run ruff format . --check
